@using TruequeTools.Entities
@using TruequeTools.Data

@inject TruequeToolsDataContext context
@inject IServiciosOferta OfertaService
@inject IJSRuntime JS

@rendermode InteractiveServer

@attribute [Authorize(Roles = "Admin,User")]

<!-- Modal -->
<div class="modal fade" id="ModalOfertar" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog custom-modal-width">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Ofertar en la publicacion #@PublicacionId</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CerrarModal"></button>
            </div>
            <div class="modal-body">
                <ul class="list-group">
                    @if (cargando)
                    {
                        <ul class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only"></span>
                            </div>
                        </ul>
                    }
                    else
                    {
                        if (PublicacionActual!.Nombre != null)
                        {
                            context.Entry(PublicacionActual).Reference(p => p.Sucursal).Load();
                            context.Entry(PublicacionActual).Reference(p => p.Usuario).Load();

                            if (PublicacionActual.UsuarioId == UserRequesterId)
                            {
                                <div class="alert alert-danger" role="alert">
                                    No puedes ofertar a una publicacion propia !
                                </div>
                            }
                            else
                            {
                                @if (MisPublicaciones!.Count != 0)
                                {
                                    if (exito)
                                    {
                                        <div>
                                            <div class="alert alert-success" role="alert">
                                                Se registró tu oferta !
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <li class="list-group-item">
                                            <div style="margin-block-start:10px" class="table-responsive">
                                                <h5>Mis Productos</h5>

                                                <div class="d-flex align-items-center flex-column">
                                                    <div>
                                                        <input style="width:180px" type="datetime-local" asp-for="StartDate" name="StartDate" id="Fecha" data-date-format="{0:yyyy-MM-dd HH}" asp-format="{0:yyyy-MM-dd HH}" class="form-control" />
                                                    </div>
                                                    <div>
                                                        <p style="margin:0px;text-align:center;">Elige una fecha y una hora</p>
                                                    </div>
                                                </div>
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th>Producto </th>
                                                            <th>Descripción</th>
                                                            <th style="min-width: 120px;"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var publi in MisPublicaciones) //MUESTRA TODAS LAS PUBLICACIONES CON UN BOTON PARA OFERTAR
                                                        {
                                                            <tr>
                                                                <td>@publi.Nombre</td>
                                                                <td>@publi.Descripcion</td>
                                                                <td style="text-align: right;">
                                                                    <div class="d-flex justify-content-end">
                                                                        <div class="btn-group" style="margin-right: 1rem;">
                                                                            @if (publi.CategoriaId != PublicacionActual.CategoriaId || publi.SucursalId != PublicacionActual.SucursalId)
                                                                            {
                                                                                <i style="margin-block:auto;padding-inline-end: 10%;">Categoria o sucursales diferentes</i>
                                                                                <span class="disabledbutton">
                                                                                    <button class="btn btn-dark rounded" disabled style="margin-right: 0.5rem;">Ofertar</button>
                                                                                </span>
                                                                            }
                                                                            else if (OfertasPublicacionActual!.Where(o => o.PublicacionQueOfertoId == publi.Id && o.Estado == 0).Count() > 0)
                                                                            {
                                                                                <i style="margin-block:auto;padding-inline-end: 10%;">Actualmente ofertado a esta publicación</i>
                                                                                <span class="disabledbutton">
                                                                                    <button class="btn btn-dark rounded" disabled style="margin-right: 0.5rem;">Ofertar</button>
                                                                                </span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div>
                                                                                    <div>
                                                                                        <span class="enabledbutton">
                                                                                            <button class="btn btn-dark rounded" @onclick="@(() =>RealizarOferta(publi.Id))" style="margin-right: 0.5rem;">
                                                                                                Ofertar
                                                                                            </button>
                                                                                        </span>
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-warning" role="alert">
                                        No puedes realizar una oferta porque no tienes ningún producto publicado !
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            <div class="alert alert-danger" role="alert">
                                Error: no se encontró o no existe la publicacion seleccionada
                            </div>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
    function refreshPage() {
        location.reload();
    }
    function getDateValue() {
        return document.getElementById("Fecha").value;
    }
    function toggleModal() {
        bootstrap.Modal.getOrCreateInstance("#ModalMensaje").toggle();
    }
</script>
<MensajeModal tituloModal="@tituloMsj" alertModal="@alertMsj" contenidoModal="@contenidoMsj" />
@code {

    [Parameter]
    public int PublicacionId { get; set; }
    [Parameter]
    public int UserRequesterId { get; set; }
    [Parameter]
    public Publicacion? PublicacionActual { get; set; }
    [Parameter]
    public List<Publicacion>? MisPublicaciones { get; set; }
    [Parameter]
    public List<Oferta>? OfertasPublicacionActual { get; set; }

    public bool cargando { get; set; }
    public bool exito { get; set; } = false;

    AuthenticationState? authState;

    public DateTime fecha;
    // variables para controlar MensajeModal
    public String? tituloMsj { get; set; }
    public String? alertMsj { get; set; }
    public String? contenidoMsj { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        cargando = true;
        await Task.Delay(500);
        cargando = false;
    }

    private async void RealizarOferta(int publiId)
    {
        String? error = await validarFecha();
        if (error != "")
        {
            mostrarError(error);
            StateHasChanged();
            return;
        }
        exito = true;
        var oferta = new Oferta
            {
                UsuarioId = UserRequesterId,
                PublicacionQueOfertoId = publiId,
                PublicacionQueOfrezcoId = PublicacionActual!.Id,
                Estado = 0,
                Fecha = fecha
            };
        await OfertaService.CreateOferta(oferta);
        StateHasChanged();
    }

    public async void CerrarModal()
    {
        if (exito)
        {
            await JS.InvokeVoidAsync("refreshPage");
        }
    }
    private async Task<String> validarFecha()
    {
        String? fechaHora = await JS.InvokeAsync<String>("getDateValue");
        if (fechaHora == "")
        {
            return "Por favor, seleccione la fecha y hora tentativas para el treuque";
        }
        DateTime fechaTentativa = DateTime.Parse(fechaHora);
        if (fechaTentativa.Month < DateTime.Now.Month || fechaTentativa.Day < DateTime.Now.Day)
        {
            return "La fecha tiene que ser de hoy en adelante.";
        }
        if (fechaTentativa.Hour < 8 || fechaTentativa.Hour > 19)
        {
            return "El horario debe ser entre las 8:00 y las 19:00";
        }
        if (fechaTentativa.DayOfWeek == DayOfWeek.Sunday)
        {
            return "La ferretería está cerrada durante los domingos.";
        }
        if (fechaTentativa.Hour < DateTime.Now.Hour || (fechaTentativa.Hour == DateTime.Now.Hour && fechaTentativa.Minute < DateTime.Now.Minute))
        {
            return "El horario no puede ser anterior al actual";
        }
        fecha = fechaTentativa;
        return "";
    }
    private async void mostrarError(String? alerta)
    {
        tituloMsj = "Error";
        alertMsj = "info";
        contenidoMsj = alerta;
        await JS.InvokeVoidAsync("toggleModal");
    }
}
