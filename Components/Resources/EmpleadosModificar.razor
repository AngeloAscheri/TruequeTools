@using TruequeTools.Entities

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IServiciosSucursal SucursalService
@inject IServiciosUsuario UsuarioService
@inject IJSRuntime JS

@rendermode InteractiveServer

<!-- Modal -->
<div class="modal fade" id="ModalModificar" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">Modificar datos del empleado #@Empleado.Id</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CerrarModal"></button>
			</div>
			<div class="modal-body">
				@if (exito)
				{
					<div class="alert alert-success" role="alert">
						Se modificaron los datos del empleado !
					</div>
				}
				else
				{
					<div class="form-floating mb-3">
						<InputSelect @bind-Value="SucursalId" class="form-control" autocomplete="sucursal" aria-required="true" placeholder="" maxlength="50">
							@foreach (var suc in Sucursales!)
							{
								<option value="@suc.Id">@suc.Nombre</option>
							}
						</InputSelect>
						<label for="sucursal">Sucursal</label>
					</div>	
					<button class="w-100 btn btn-lg btn-dark" @onclick="@(() =>ModificarEmpleado())">Confirmar</button>
				}
			</div>
		</div>
	</div>
</div>

@code {

	[Parameter]
	public Usuario? Empleado { get; set; }

	[Parameter]
	public List<Sucursal>? Sucursales { get; set; }

	public bool exito = false;
	public int SucursalId;

	protected override Task OnParametersSetAsync()
	{
		SucursalId = Empleado!.SucursalId;
		return Task.CompletedTask;
	}

	private async void ModificarEmpleado()
	{
		Usuario e = await UsuarioService.FindEmpleado(Empleado!.Id);
		e.SucursalId = SucursalId;
		await UsuarioService.OverwriteUsuarioById(e);
		exito = true;
		StateHasChanged();
	}

	public async void CerrarModal()
	{
		if (exito)
		{
			await JS.InvokeVoidAsync("refreshPage");
		}
	}

}
