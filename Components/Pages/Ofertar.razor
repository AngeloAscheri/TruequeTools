@page "/ofertar/{Id:int}"

@using TruequeTools.Data
@using TruequeTools.Entities

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject TruequeToolsDataContext context
@inject IServiciosPublicacion PublicacionService
@inject IServiciosOferta OfertaService
@inject NavigationManager NavMan
@inject IJSRuntime JS

@rendermode @(new InteractiveServerRenderMode(prerender:false))

@attribute [Authorize(Roles = "Admin,User")]

<PageTitle>Realizar oferta</PageTitle>

<div>
    <ul class="list-group" style="padding-bottom:1.1rem">
        @if (cargando)
        {
            <ul class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="sr-only"></span>
                </div>
            </ul>
        }
        else
        {
            if (PublicacionActual.Nombre != null)
            {
                context.Entry(PublicacionActual).Reference(p => p.Sucursal).Load();
                context.Entry(PublicacionActual).Reference(p => p.Usuario).Load();

                if (PublicacionActual.UsuarioId == UserId)
                {
                    <div class="alert alert-danger" role="alert">
                        <h3>No puedes ofertar a una publicacion propia !</h3>
                    </div>
                }
                else
                {
                    <li class="list-group-item"><h3>Ofertar a la publicacion #@Id</h3></li>
                    <li class="list-group-item">
                        @if (MisPublicaciones.Count != 0)
                        {
                            if (exito)
                            {
                                <div>
                                    <div class="alert alert-success" role="alert">
                                        Se registró tu oferta !
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div style="margin-block-start:10px" class="table-responsive">
                                    <h5>Mis Productos</h5>
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Producto </th>
                                                <th>Descripción</th>
                                                <th style="min-width: 120px;"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var publi in MisPublicaciones) //MUESTRA TODAS LAS PUBLICACIONES CON UN BOTON PARA OFERTAR
                                            {
                                                <tr>
                                                    <td>@publi.Nombre</td>
                                                    <td>@publi.Descripcion</td>
                                                    <td style="text-align: right;">
                                                        <div class="d-flex justify-content-end">
                                                            <div class="btn-group" style="margin-right: 1rem;">
                                                                @if (publi.CategoriaId != PublicacionActual.CategoriaId || publi.SucursalId != PublicacionActual.SucursalId)
                                                                {
                                                                    <i style="margin-block:auto;padding-inline-end: 10%;">Categoria o sucursales diferentes</i>
                                                                    <span class="disabledbutton">
                                                                        <button class="btn btn-dark rounded" disabled style="margin-right: 0.5rem;">Ofertar</button>
                                                                    </span>
                                                                }
                                                                else if (OfertasPublicacionActual.Where(o => o.PublicacionQueOfertoId == publi.Id).Count() > 0)
                                                                {
                                                                    <i style="margin-block:auto;padding-inline-end: 10%;">Actualmente ofertado a esta publicación</i>
                                                                    <span class="disabledbutton">
                                                                        <button class="btn btn-dark rounded" disabled style="margin-right: 0.5rem;">Ofertar</button>
                                                                    </span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="enabledbutton">
                                                                        <button class="btn btn-dark rounded" @onclick="@(() =>RealizarOferta(publi.Id))" style="margin-right: 0.5rem;">
                                                                            Ofertar
                                                                        </button>
                                                                    </span>
                                                                }
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-warning" role="alert">
                                <h3>No puedes realizar una oferta porque no tienes ningún producto publicado. ¿Por qué no publicas uno?</h3>
                            </div>
                        }
                    </li>
                }
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    <h3>Error: no se encontró o no existe la publicacion seleccionada</h3>
                </div>
            }
        }
    </ul>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    public bool cargando { get; set; }
    public bool exito { get; set; } = false;
    public int UserId;

    public Publicacion PublicacionActual { get; set; } = new();
    public List<Publicacion> MisPublicaciones { get; set; } = new();
    public List<Oferta> OfertasPublicacionActual { get; set; } = new();

    AuthenticationState? authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserId = int.Parse(authState.User!.FindFirst("UsuarioId")!.Value); //TRAIGO EL ID DEL USUARIO QUE OFERTA
    }

    protected override async Task OnParametersSetAsync()
    {
        cargando = true;
        PublicacionActual = await PublicacionService.ReadPublicacionById(Id); //LEE LA PUBLICACION ACTUAL
        MisPublicaciones = await PublicacionService.ReadAllPublicacionesCurrentUser(UserId); //TRAE LAS PUBLICACIONES DEL USUARIO QUE OFERTA
        OfertasPublicacionActual = await PublicacionService.ReadAllOfertasOfPublicacion(PublicacionActual.Id);
        await Task.Delay(500); //DEJAME EL DELAY DE 1 SEGUNDO POR FAVOR MARTIN :)
        cargando = false;
    }

    private async void RealizarOferta(int publiId)
    {
        exito = true;
        var oferta = new Oferta();
        oferta.UsuarioId = UserId;
        oferta.PublicacionQueOfertoId = publiId;
        oferta.PublicacionQueOfrezcoId = PublicacionActual.Id;
        oferta.Estado = 0;
        await OfertaService.CreateOferta(oferta); 
    }

}
