@page "/sucursales"

@using TruequeTools.Entities

@inject NavigationManager NavMan
@inject IServiciosSucursal SucursalService

@rendermode @(new InteractiveServerRenderMode(prerender:false))

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Sucursales</PageTitle>

<div class="row">
	<div class="col-lg-12 pt-4 pb-4 border">
		<h1 style="text-align:center">Sucursales</h1>		
		<h2 style="text-align:center">Modificar sucursales</h2>
		<hr />
		<div class="form-floating mb-3">
			@if (sucrusales.Count == 0)
			{
				<div class="d-flex justify-content-center">
					<div class="spinner-border" role="status">
						<span class="sr-only"></span>
					</div>
				</div>
			}
			else
			{
				<div class="table-responsive">
					<!-- Añade esta clase para hacer la tabla responsiva -->
					<table class="table">
						<thead>
							<tr>
								<th>Id</th>
								<th>Nombre</th>
								<th>Direccion</th>
								<th>Localidad</th>
								<th style="min-width: 120px;"></th> <!-- Utiliza min-width para asegurar un ancho mínimo -->
								<th style="min-width: 120px;"></th>
							</tr>
						</thead>
						<tbody>
							@foreach (var suc in sucrusales)
							{
								<tr>
									<td>@suc.Id</td>
									<td>@suc.Nombre</td>
									<td>@suc.Direccion</td>
									<td>@suc.Localidad</td>
									<td style="text-align: right;"><button class="btn btn-secondary" @onclick="@(() => EditarSucursal(suc.Id))">Editar</button></td>
									<td style="text-align: right;"><button class="btn btn-danger" @onclick="@(() => EliminarSucursal(suc.Id))">Eliminar</button></td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</div>
		<button class="w-30 btn btn-lg btn-dark d-block mx-auto text-center" @onclick="CrearSucursal">Nueva Sucursal</button>
	</div>
</div>

@code {

	List<Sucursal> sucrusales = new List<Sucursal>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		sucrusales = await SucursalService.ReadAllSucursales(); //LECTURA DE TODAS LAS SUCURSALES
	}

	void CrearSucursal()
	{
		NavMan.NavigateTo("/sucursales-edit"); //ALTA DE SUCURSAL
	}

	void EditarSucursal(int id)
	{
		NavMan.NavigateTo($"/sucursales-edit/{id}"); //MODIFICACION DE SUCURSAL
	}

	async Task EliminarSucursal(int id)
	{
		await SucursalService.DeleteSucursal(id); //BAJA DE SUCURSAL
		sucrusales = await SucursalService.ReadAllSucursales(); //ACTUALIZO LA TABLA
	}

}

