@page "/recuperar"

@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.AspNetCore.Identity;
@using System.ComponentModel.DataAnnotations;

@inject IServiciosUsuario UsuarioService

@if (exito)
{
    <div class="alert alert-success" role="alert">
        Exito: Si el correo corresponde a una cuenta registrada se le enviará un codigo de acceso !
    </div>
}
else
{
    <EditForm Model="@Modelo" OnValidSubmit="RestablecerContraseña" FormName="ContraseñaForm">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" role="alert" />
        @if (!string.IsNullOrEmpty(MensajeError))
        {
            <div class="alert alert-danger mt-3" role="alert">
                @MensajeError
            </div>
        }
        <div class="form-floating mb-3">
            <InputText @bind-Value="Modelo.Email" class="form-control" autocomplete="correo" aria-required="true" placeholder="" maxlength="100" />
            <label for="correo">Correo</label>
            <ValidationMessage For="() => Modelo.Email" class="text-danger" />
        </div>
        <button type="submit" class="w-100 btn btn-lg btn-dark">Recuperar Contraseña</button>
    </EditForm>
}

@code {

    public class RestablecerViewModel
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }
    }

    [SupplyParameterFromForm]
    private RestablecerViewModel Modelo { get; set; } = new();

    string? MensajeError;
    bool exito = false;

    public async Task RestablecerContraseña(EditContext editContext)
    {
        exito = true;
        await UsuarioService.RestablecerContraseña(Modelo.Email!);
    }

}