@page "/empleados"

@using TruequeTools.Data
@using TruequeTools.Entities

@inject TruequeToolsDataContext context
@inject IServiciosUsuario UsuarioService

@rendermode @(new InteractiveServerRenderMode(prerender:false))

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Empleados</PageTitle>

<div class="row">
	<div class="col-lg-12 pt-4 pb-4 border">
		<h1 style="text-align:center">Empleados</h1>
		<h2 style="text-align:center">Modificar Empleados</h2>
		<hr />
		<div class="form-floating mb-3">
			@if (cargando)
			{
				<div class="d-flex justify-content-center">
					<div class="spinner-border" role="status">
						<span class="sr-only"></span>
					</div>
				</div>
			}
			else
			{
				@if (empleados.Count == 0)
				{
					<div class="alert alert-warning" role="alert">
						No hay empleados para mostrar...
					</div>
				}
				else
				{
					<div class="table-responsive">
						<!-- Añade esta clase para hacer la tabla responsiva -->
						<table class="table">
							<thead>
								<tr>
									<th>Id</th>
									<th>Nombre</th>
									<th>Apellido</th>
									<th>Sucursal</th>
									<th style="min-width: 120px;"></th> <!-- Utiliza min-width para asegurar un ancho mínimo -->
								</tr>
							</thead>
							<tbody>
								@foreach (var emp in empleados)
								{
									context.Entry(emp).Reference(p => p.Sucursal).Load();
									<tr>
										<td>@emp.Id</td>
										<td>@emp.Nombre</td>
										<td>@emp.Apellido</td>
										<td>@emp.Sucursal!.Nombre</td>
										<td style="text-align: right;">
											<div class="d-flex justify-content-end">
												<div class="btn-group" style="margin-right: 1rem;">
													<button class="btn btn-secondary rounded" style="margin-right: 0.5rem;">Editar</button>
													<button class="btn btn-danger rounded">Eliminar</button>
												</div>
											</div>
										</td>
									</tr>

								}
							</tbody>
						</table>
					</div>

				}
			}	
		</div>
		<button class="w-30 btn btn-lg btn-dark d-block mx-auto text-center">Nuevo Empleado</button>
	</div>
</div>

@code {

	List<Usuario> empleados = new List<Usuario>();

	bool cargando = true;

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		empleados = await UsuarioService.ReadAllEmpleados(); //LECTURA DE TODAS LAS SUCURSALES
		cargando = false;
	}

}
