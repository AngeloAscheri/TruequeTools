@page "/trueques"

@using TruequeTools.Data
@using TruequeTools.Entities

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject TruequeToolsDataContext context
@inject NavigationManager NavMan
@inject IServiciosUsuario UsuarioService
@inject IServiciosTrueque TruequeService
@inject IServiciosOferta OfertaService
@inject IServiciosSucursal SucursalService
@inject IServiciosPublicacion PublicacionService
@inject IJSRuntime JS

@attribute [Authorize(Roles = "Admin,Employee")]

@rendermode @(new InteractiveServerRenderMode(prerender:false))

<div class="row">
    <div class="col-lg-12 pt-4 pb-4 border">
        <h1 style="text-align:center">Trueques</h1>
        <h2 style="text-align:center">@nombreSucursal</h2>
        <hr />
        <div class="form-floating mb-3">
            @if (cargando)
            {
                <div class="d-flex justify-content-center">
                    <div class="spinner-border" role="status">
                        <span class="sr-only"></span>
                    </div>
                </div>
            }
            else
            {
                @if (trueques.Count == 0)
                {
                    <div class="alert alert-warning" role="alert">
                        No hay trueques para mostrar...
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <!-- Añade esta clase para hacer la tabla responsiva -->
                        <table class="table table-bordered caption-top">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Sucursal</th>
                                    <th>Fecha y Hora</th>
                                    <th>Producto 1</th>
                                    <th>Producto 2</th>
                                    <th>Comentarios</th>
                                    <th>Estado</th>                               
                                </tr> 
                            </thead>
                            <tbody>
                                @foreach (var t in trueques)
                                {
                                    var estado = "";
                                    var estilo = "";
                                    var comentario = "";

                                    if(t.Estado == -1)
                                    {
                                        estado = "Rechazado";
                                        estilo = "table-danger";
                                        comentario = "Trueque rechazado";
                                    }
                                    else if(t.Estado == 0)
                                    {
                                        estado = "Pendiente";
                                        estilo = "table-secondary";
                                        comentario = "Trueque pendiente";
                                    }
                                    else if(t.Estado == 1)
                                    {
                                        estado = "Completado";
                                        estilo = "table-success";
                                        comentario = "Trueque completado sin ventas";
                                    }
                                    else
                                    {
                                        estado = "Completado";
                                        estilo = "table-success";
                                        comentario = "Trueque completado con ventas";
                                    }

                                    context.Entry(t).Reference(p => p.Oferta).Load();
                                    context.Entry(t.Oferta!).Reference(p => p.PublicacionQueOfrezco).Load();
                                    context.Entry(t.Oferta!).Reference(p => p.PublicacionQueOferto).Load();
                                    context.Entry(t.Oferta!.PublicacionQueOferto!).Reference(p => p.Sucursal).Load();
                                    <tr class="@estilo">
                                        <td>@t.Id</td>
                                        <td>@t.Oferta!.PublicacionQueOferto!.Sucursal!.Nombre</td>
                                        <td>@t.Oferta!.Fecha.ToShortDateString() @t.Oferta!.Fecha.ToShortTimeString()</td>
                                        <td>
                                            <NavLink class="text-primary" data-bs-toggle="modal" data-bs-target="#ModalPublicacion" @onclick="@(() => SwitchPublicacion(@t.Oferta!.PublicacionQueOferto!))">
                                                @t.Oferta!.PublicacionQueOferto!.Nombre
                                            </NavLink>
                                        </td>
                                        <td>
                                            <NavLink class="text-primary" data-bs-toggle="modal" data-bs-target="#ModalPublicacion" @onclick="@(() => SwitchPublicacion(@t.Oferta!.PublicacionQueOfrezco!))">
                                                @t.Oferta!.PublicacionQueOfrezco!.Nombre
                                            </NavLink> 
                                        </td>
                                        <td>@comentario</td> 
                                        @if (t.Estado == 0)
                                        {
                                            <td style="text-align: right;">
                                                <div class="d-flex justify-content-end">
                                                    <div class="btn-group" style="margin-right: 1rem;">
                                                        <button class="btn btn-success rounded" style="margin-right: 0.5rem;" @onclick="@(() =>AceptarTrueque(t.Id))" data-bs-toggle="modal" data-bs-target="#ModalConfirmar">Confirmar</button>
                                                        <button class="btn btn-danger rounded" @onclick="@(() =>RechazarTrueque(t.Id))" data-bs-toggle="modal" data-bs-target="#ModalRechazar">Rechazar</button>
                                                    </div>
                                                </div>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>@estado</td>
                                        }                                   
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </div>
    </div>
</div>

<script>
    function refreshPage() {
        location.reload();
    }
</script>

<TruequeConfirmar TruequeId="TruequeId" />
<TruequeEliminar TruequeId="TruequeId" />
<PublicacionModal PublicacionActual="publicacion" />

@code {

    List<Trueque> trueques = new List<Trueque>();

    bool cargando = true;
    string? nombreSucursal;
    int TruequeId;
    Publicacion publicacion = new();

    void SwitchPublicacion(Publicacion p)
    {
        publicacion = p;
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var sucursalId = int.Parse(authState.User!.FindFirst("SucursalId")!.Value);
        var userId = int.Parse(authState.User!.FindFirst("UsuarioId")!.Value);
        if(userId == 1)
        {
            trueques = await TruequeService.ReadAllTrueques();
            nombreSucursal = "Todas las Sucursales";
        }
        else
        {
            trueques = await TruequeService.ReadTruequesBySucursal(sucursalId);
            Sucursal suc = await SucursalService.ReadSucursalById(sucursalId);
            nombreSucursal = "Sucursal " + suc.Nombre;
        }
        cargando = false;
    }

    private void AceptarTrueque(int truequeId)
    {
        TruequeId = truequeId;
    }

    private void RechazarTrueque(int truequeId)
    { 
        TruequeId = truequeId;
    }

}
