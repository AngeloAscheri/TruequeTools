@page "/dashboard"

@using TruequeTools.Data
@using TruequeTools.Entities

@inject TruequeToolsDataContext context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IServiciosOferta OfertaService
@inject IServiciosPublicacion PublicacionService

@attribute [Authorize(Roles = "Admin,User")]

<div class="border">
    <h1>Ofertas Realizadas: @OfertasRealizadas.Count</h1>
    @foreach(var publi in OfertasRealizadas)
    {
        context.Entry(publi).Reference(x => x.PublicacionQueOferto).Load();
        context.Entry(publi).Reference(x => x.PublicacionQueOfrezco).Load();
        context.Entry(publi.PublicacionQueOfrezco).Reference(x => x.Usuario).Load();
        <p>Yo oferto sobre la publicacion de @publi.PublicacionQueOfrezco.Usuario.Nombre @publi.PublicacionQueOferto.Nombre</p>
    }
</div>
<div class="border">
    <h1>Recibidas: @OfertasRecibidas.Count</h1>
    @foreach (var publi in OfertasRecibidas)
    {
        context.Entry(publi).Reference(p => p.Usuario).Load();
        context.Entry(publi).Reference(p => p.PublicacionQueOferto).Load();
        <p>@publi.Usuario.Nombre me ofrece a mi @publi.PublicacionQueOferto.Nombre</p>
    }
</div>

@code {

    List<Oferta> OfertasRecibidas { get; set; } = new();
    List<Oferta> OfertasRealizadas { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var UserId = int.Parse(authState.User!.FindFirst("UsuarioId")!.Value); //TRAIGO EL ID DEL USUARIO

        List<Publicacion> UserPublicaciones = await PublicacionService.ReadAllPublicacionesCurrentUser(UserId);

        OfertasRealizadas = await OfertaService.ReadAllOfertasRealizadasCurrentUser(UserId);

        foreach (var publi in UserPublicaciones)
        {
            await context.Entry(publi).Collection(p => p.OfertasRecibidas).LoadAsync();
            foreach (var oferta in publi.OfertasRecibidas)
            {
                OfertasRecibidas.Add(oferta);
            }
        }
    }
}

