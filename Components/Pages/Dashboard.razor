@page "/dashboard"

@using TruequeTools.Data
@using TruequeTools.Entities

@inject TruequeToolsDataContext context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IServiciosOferta OfertaService
@inject IServiciosPublicacion PublicacionService

@attribute [Authorize(Roles = "Admin,User")]

<div class="ofertas-div">
    <h1 class="fw-bold">Ofertas Realizadas: @OfertasRealizadas.Count</h1>
    @foreach (var publi in OfertasRealizadas)
    {
        var estado = "";
        @if (publi.Estado == 0)
        {
            estado = "Pendiente";
        }
        else if (publi.Estado == -1)
        {
            estado = "Reachazada";
        }
        else
        {
            estado = "Aceptada";
        }
        context?.Entry(publi).Reference(x => x.PublicacionQueOferto).Load();
        context?.Entry(publi).Reference(x => x.PublicacionQueOfrezco).Load();
        context?.Entry(publi.PublicacionQueOfrezco!).Reference(x => x.Usuario).Load();
        <div class="oferta-cuerpo">
            <p><span class="fw-bold">Usuario: </span>@publi?.PublicacionQueOfrezco?.Usuario?.Nombre</p>
            <p><span class="fw-bold">Mi oferta: </span>@publi?.PublicacionQueOferto?.Nombre</p>
            <p><span class="fw-bold">Estado: </span>@estado</p>
        </div>
    }
</div>
<div class="ofertas-div">
    <h1>Recibidas: @OfertasRecibidas.Count</h1>
    @foreach (var publi in OfertasRecibidas)
    {
        var estado = "";
        @if (publi.Estado == 0)
        {
            estado = "Pendiente";
        }
        else if (publi.Estado == -1)
        {
            estado = "Reachazada";
        }
        else
        {
            estado = "Aceptada";
        }
        context?.Entry(publi).Reference(p => p.Usuario).Load();
        context?.Entry(publi).Reference(p => p.PublicacionQueOferto).Load();
        <div class="oferta-cuerpo">
            <p><span class="fw-bold">Ofertante: </span>@publi.Usuario!.Nombre</p>
            <p><span class="fw-bold">Oferta: </span>@publi.PublicacionQueOferto!.Nombre</p>
            <p><span class="fw-bold">Estado: </span>@estado</p>
        </div>
    }
</div>

@code {

    List<Oferta> OfertasRecibidas { get; set; } = new();
    List<Oferta> OfertasRealizadas { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var UserId = int.Parse(authState.User!.FindFirst("UsuarioId")!.Value); //TRAIGO EL ID DEL USUARIO

        List<Publicacion> UserPublicaciones = await PublicacionService.ReadAllPublicacionesCurrentUser(UserId);

        OfertasRealizadas = await OfertaService.ReadAllOfertasRealizadasByUser(UserId);

        foreach (var publi in UserPublicaciones)
        {
            await context.Entry(publi).Collection(p => p.OfertasRecibidas!).LoadAsync();
            foreach (var oferta in publi.OfertasRecibidas!)
            {
                OfertasRecibidas.Add(oferta);
            }
        }
    }
}

